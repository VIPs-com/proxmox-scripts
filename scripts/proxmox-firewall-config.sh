#!/usr/bin/env bash

# üõ°Ô∏è Script de Configura√ß√£o de Firewall Proxmox VE (V.1.0.0)
# Este script configura as regras de firewall para um n√≥ Proxmox VE.
# Ele deve ser executado INDIVIDUALMENTE em cada n√≥ do cluster AP√ìS a configura√ß√£o inicial do n√≥.

# üõ†Ô∏è Configura√ß√µes Essenciais - Podem ser sobrescritas por /etc/proxmox-firewall.conf
NODE_NAME=$(hostname)             # Nome do servidor atual
CLUSTER_NETWORK="172.20.220.0/24" # Rede para comunica√ß√£o interna do cluster (Corosync, pve-cluster)

# Redes locais que ter√£o acesso permitido ao WebUI e SSH.
# Estas redes ser√£o agrupadas em um IPSet chamado 'local_networks'.
LOCAL_NETWORKS=("172.20.220.0/24" "172.21.221.0/24" "172.25.125.0/24")

LOG_FILE="/var/log/proxmox-firewall-$(date +%Y%m%d)-$(hostname).log" # Arquivo de log espec√≠fico por n√≥
LOCK_FILE="/etc/proxmox-firewall.lock" # Garante que o script n√£o seja executado m√∫ltiplas vezes
START_TIME=$(date +%s)            # In√≠cio do registro de tempo de execu√ß√£o

# --- FUN√á√ïES AUXILIARES ---

# Fun√ß√µes de Log
log_info() { echo -e "\n‚ÑπÔ∏è $*" | tee -a "$LOG_FILE"; }
log_ok() { echo -e "\n‚úÖ $*" | tee -a "$LOG_FILE"; }
log_erro() { echo -e "\n‚ùå **ERRO**: $*" | tee -a "$LOG_FILE"; }

log_cmd() {
    echo -e "\nüîπ Executando Comando: $*" | tee -a "$LOG_FILE"
    eval "$@" >> "$LOG_FILE" 2>&1
    local status=$?
    if [ $status -ne 0 ]; then
        echo "‚ùå **ERRO CR√çTICO** [$status]: Falha ao executar o comando: $*" | tee -a "$LOG_FILE"
        echo "O script ser√° encerrado. Verifique o log em $LOG_FILE para mais detalhes." | tee -a "$LOG_FILE"
        exit $status
    fi
    return $status
}

# Fun√ß√£o para fazer backup de arquivos
backup_file() {
    local file="$1"
    if [ -f "$file" ]; then
        local backup_dir="/var/backups/proxmox-firewall"
        mkdir -p "$backup_dir"
        local timestamp=$(date +%Y%m%d%H%M%S)
        local backup_path="$backup_dir/$(basename "$file").${timestamp}"
        log_info "üì¶ Fazendo backup de '$file' para '$backup_path'..."
        cp -p "$file" "$backup_path" >> "$LOG_FILE" 2>&1
        if [ $? -ne 0 ]; then
            log_info "‚ö†Ô∏è **AVISO**: Falha ao criar backup de '$file'. Continue com cautela."
        else
            log_info "‚úÖ Backup de '$file' criado com sucesso."
        fi
    else
        log_info "‚ÑπÔ∏è Arquivo '$file' n√£o encontrado, nenhum backup necess√°rio."
    fi
}

# Fun√ß√£o para exibir ajuda
show_help() {
    echo "Uso: $0 [OP√á√ÉO]"
    echo "Script para configura√ß√£o de firewall em um n√≥ Proxmox VE."
    echo ""
    echo "Op√ß√µes:"
    echo "  -h, --help    Mostra esta mensagem de ajuda e sai."
    echo "  --skip-lock   Ignora a verifica√ß√£o de arquivo de lock, permitindo m√∫ltiplas execu√ß√µes (N√ÉO RECOMENDADO)."
    echo ""
    echo "Vari√°veis de configura√ß√£o podem ser definidas em /etc/proxmox-firewall.conf"
    echo "Exemplo: CLUSTER_NETWORK=\"192.168.1.0/24\""
    echo "         LOCAL_NETWORKS=(\"192.168.1.0/24\" \"10.0.0.0/8\")"
    exit 0
}

# --- PROCESSAMENTO DE OP√á√ïES E CARREGAMENTO DE CONFIGURA√á√ÉO EXTERNA ---

# Processa op√ß√µes de linha de comando
SKIP_LOCK=false
for arg in "$@"; do
    case "$arg" in
        -h|--help) show_help ;;
        --skip-lock) SKIP_LOCK=true ;;
        *) log_erro "Op√ß√£o inv√°lida: $arg. Use -h ou --help para ver as op√ß√µes."; exit 1 ;;
    esac
done

# --- DOWNLOAD E CARREGAMENTO DE CONFIGURA√á√ÉO EXTERNA ---
CONFIG_URL="https://raw.githubusercontent.com/VIPs-com/proxmox-scripts/main/etc/proxmox-firewall.conf" # URL para o arquivo de config do firewall
CONFIG_FILE="/etc/proxmox-firewall.conf"

# Se o arquivo de configura√ß√£o local n√£o existir, baixa do GitHub
if [[ ! -f "$CONFIG_FILE" ]]; then
    log_info "‚öôÔ∏è Arquivo de configura√ß√£o do firewall n√£o encontrado localmente. Tentando baixar do GitHub: $CONFIG_URL..."
    curl -s -o "$CONFIG_FILE" "$CONFIG_URL"
    if [ $? -eq 0 ] && [ -f "$CONFIG_FILE" ]; then
        log_ok "‚úÖ Configura√ß√£o do firewall baixada e salva em $CONFIG_FILE."
    else
        log_erro "Falha ao baixar configura√ß√µes do firewall do GitHub! Verifique a URL ou conectividade. Continuando com configura√ß√µes padr√£o do script."
        rm -f "$CONFIG_FILE"
    fi
fi

# Carrega configura√ß√µes do arquivo (local ou rec√©m-baixado)
if [[ -f "$CONFIG_FILE" ]]; then
    log_info "‚öôÔ∏è Carregando configura√ß√µes do firewall de $CONFIG_FILE..."
    source "$CONFIG_FILE"
    log_ok "‚úÖ Configura√ß√µes do firewall carregadas com sucesso!"
else
    log_info "‚ÑπÔ∏è Arquivo de configura√ß√£o do firewall $CONFIG_FILE n√£o encontrado. Usando configura√ß√µes padr√£o do script."
fi

# --- IN√çCIO DA EXECU√á√ÉO DO SCRIPT ---

# üîí Preven√ß√£o de M√∫ltiplas Execu√ß√µes
if [[ "$SKIP_LOCK" == "false" && -f "$LOCK_FILE" ]]; then
    log_erro "O script de firewall j√° foi executado anteriormente neste n√≥ ($NODE_NAME). Abortando para evitar configura√ß√µes duplicadas."
    log_info "Se voc√™ realmente precisa re-executar, remova '$LOCK_FILE' ou use '--skip-lock' (N√ÉO RECOMENDADO)."
    exit 1
fi
touch "$LOCK_FILE" # Cria o arquivo de lock

log_info "üìÖ **IN√çCIO**: Execu√ß√£o do script de configura√ß√£o de firewall no n√≥ **$NODE_NAME** em $(date)"

# --- Fase 1: Verifica√ß√µes Iniciais ---

log_info "üîç Verificando depend√™ncias essenciais do sistema (pve-firewall)..."
if ! command -v pve-firewall &>/dev/null; then
    log_erro "O comando 'pve-firewall' n√£o foi encontrado. Certifique-se de que o Proxmox VE est√° instalado corretamente."
    exit 1
fi
log_info "‚úÖ Depend√™ncia 'pve-firewall' verificada."

log_info "üîç Verificando portas cr√≠ticas em uso antes de configurar o firewall..."
# Lista de portas essenciais para Proxmox e cluster
CRITICAL_PORTS="8006 22 5404 5405 2224"
for port in $CRITICAL_PORTS; do
    if ss -tuln | grep -q ":$port "; then
        log_info "‚ö†Ô∏è **AVISO**: Porta TCP/UDP **$port** j√° est√° em uso! Verifique se isso n√£o conflitar√° com as regras do firewall Proxmox. Se estiver em uso pelo Proxmox ou Corosync, isso √© normal."
    fi
done
log_info "‚úÖ Verifica√ß√£o de portas conclu√≠da."

# --- Fase 2: Configura√ß√£o do Firewall ---

log_info "üõ°Ô∏è Configurando o firewall do Proxmox VE com regras espec√≠ficas..."

# Tentativa de resetar o firewall para um estado limpo
log_info "Desativando e limpando todas as regras existentes do firewall Proxmox VE..."
# Reinstala o pacote pve-firewall para garantir que esteja em um estado limpo
log_cmd "apt --reinstall install -y pve-firewall"

# Reinicia pvedaemon, pois pve-firewall depende dele
log_info "Reiniciando o servi√ßo pvedaemon para garantir que o firewall possa se comunicar..."
log_cmd "systemctl restart pvedaemon"
log_info "Aguardando 5 segundos para pvedaemon iniciar..."
sleep 5

# Verifica se pvedaemon est√° ativo
if ! systemctl is-active pvedaemon; then
    log_erro "O servi√ßo pvedaemon N√ÉO est√° ativo ap√≥s o rein√≠cio. O script ser√° encerrado."
    exit 1
else
    log_ok "‚úÖ Servi√ßo pvedaemon est√° ativo."
fi

# Verifica se o firewall est√° habilitado e desabilita
if pve-firewall status | grep -q "Status: enabled"; then
    log_info "O firewall Proxmox VE est√° habilitado. Desativando-o temporariamente."
    log_cmd "pve-firewall disable"
else
    log_info "O firewall Proxmox VE j√° est√° desabilitado ou n√£o est√° rodando."
fi

# --- In√≠cio da l√≥gica de configura√ß√£o do firewall via host.fw e cluster.fw (com IPSet) ---
FIREWALL_DIR="/etc/pve/nodes/$NODE_NAME/firewall"
HOST_FW_FILE="$FIREWALL_DIR/host.fw"
CLUSTER_FW_FILE="/etc/pve/firewall/cluster.fw" # Caminho para o cluster.fw

log_info "Criando diret√≥rio para arquivos de configura√ß√£o do firewall do host: $FIREWALL_DIR..."
log_cmd "mkdir -p $FIREWALL_DIR"

log_info "Fazendo backup do arquivo de configura√ß√£o do firewall do host: $HOST_FW_FILE..."
backup_file "$HOST_FW_FILE"

log_info "Fazendo backup do arquivo de configura√ß√£o do firewall do cluster: $CLUSTER_FW_FILE..."
backup_file "$CLUSTER_FW_FILE"

# Configurando 'local_networks' como um IPSet no cluster.fw
log_info "Configurando IPSet 'local_networks' no firewall do cluster ($CLUSTER_FW_FILE)..."
# Primeiro, limpa o conte√∫do existente de cluster.fw para evitar duplica√ß√µes e erros de parsing antigos
log_cmd "echo '' > $CLUSTER_FW_FILE" # Limpa o arquivo

cat <<EOF >> "$CLUSTER_FW_FILE"
[OPTIONS]
enable: 1 # Habilita o firewall do cluster (globalmente)

[IPSET local_networks]
$(IFS=$'\n'; echo "${LOCAL_NETWORKS[*]}")
EOF
log_ok "‚úÖ IPSet 'local_networks' configurado em $CLUSTER_FW_FILE."


log_info "Escrevendo novas regras de firewall para $HOST_FW_FILE (usando IPSet)..."
# Inicia o arquivo com as op√ß√µes padr√£o e pol√≠tica de DROP para entrada
cat <<EOF > "$HOST_FW_FILE"
# firewall for host $NODE_NAME
#
[OPTIONS]
enable: 1
policy_in: DROP
policy_out: ACCEPT

[RULES]
# Regras para permitir acesso ao WebUI (porta 8006) e SSH (porta 22) das redes locais
IN ACCEPT -p tcp -s +local_networks --dport 8006 -j ACCEPT -c "Acesso WebUI das redes locais"
IN ACCEPT -p tcp -s +local_networks --dport 22 -j ACCEPT -c "Acesso SSH das redes locais"

# CR√çTICO: Regras para comunica√ß√£o INTERNA DO CLUSTER (Corosync e pve-cluster)
IN ACCEPT -p udp -s $CLUSTER_NETWORK --dport 5404:5405 -j ACCEPT -c "Corosync entre n√≥s do cluster"
IN ACCEPT -p tcp -s $CLUSTER_NETWORK --dport 2224 -j ACCEPT -c "pve-cluster entre n√≥s do cluster"

# Permitir tr√°fego ICMP (ping) entre os n√≥s do cluster para facilitar diagn√≥sticos
IN ACCEPT -p icmp -s $CLUSTER_NETWORK -j ACCEPT -c "Permitir ping entre os n√≥s do cluster"

# Regra para permitir tr√°fego de SA√çDA para NTP (servidores externos)
OUT ACCEPT -p udp --dport 123 -j ACCEPT -c "Permitir sa√≠da para NTP"

# A pol√≠tica padr√£o de entrada (policy_in: DROP) j√° bloqueia o tr√°fego n√£o explicitamente permitido.
# A pol√≠tica padr√£o de sa√≠da (policy_out: ACCEPT) permite a sa√≠da por padr√£o.
EOF
log_ok "‚úÖ Regras de firewall escritas em $HOST_FW_FILE (usando IPSet)."

log_info "Ativando e recarregando o servi√ßo de firewall do Proxmox VE para aplicar as novas regras..."
log_cmd "pve-firewall start" # Este comando habilita e inicia o firewall
log_cmd "pve-firewall reload" # Usar reload para aplicar as novas regras do host.fw e cluster.fw
log_ok "‚úÖ Firewall Proxmox VE configurado e recarregado com sucesso."

# --- Fim da l√≥gica de configura√ß√£o do firewall ---

# --- Fase 3: Finaliza√ß√£o ---

log_info "üîç Verificando status do servi√ßo de firewall do Proxmox VE..."
if ! systemctl is-active pve-firewall; then
    log_erro "O servi√ßo pve-firewall N√ÉO est√° ativo. Verifique os logs e tente reiniciar manualmente."
    log_info "O script ser√° encerrado devido √† falha de servi√ßo cr√≠tico."
    exit 1
else
    log_ok "‚úÖ Servi√ßo pve-firewall est√° ativo."
fi

log_info "üîó Realizando testes de conectividade externa (internet) via HTTPS ap√≥s configura√ß√£o do firewall..."
if nc -zv google.com 443 &>/dev/null; then
    log_info "‚úÖ Conex√£o externa via HTTPS (google.com:443) OK."
else
    log_info "‚ö†Ô∏è **AVISO**: Falha na conex√£o externa via HTTPS. Verifique as regras de sa√≠da do firewall e a conectividade geral com a internet."
fi

log_info "üßº Limpando logs de firewall antigos (com mais de 15 dias) em /var/log/..."
log_cmd "find /var/log -name \"proxmox-firewall-*.log\" -mtime +15 -exec rm {} \\;"
log_info "‚úÖ Limpeza de logs antigos conclu√≠da."

# C√°lculo do tempo total de execu√ß√£o
END_TIME=$(date +%s)
ELAPSED_TIME=$((END_TIME - START_TIME))

log_info "‚úÖ **FINALIZADO**: Configura√ß√£o do firewall no n√≥ **$NODE_NAME** conclu√≠da em $(date)."
log_info "‚è≥ Tempo total de execu√ß√£o do script: **$ELAPSED_TIME segundos**."
log_info "üìã O log detalhado de todas as opera√ß√µes est√° dispon√≠vel em: **$LOG_FILE**."

log_info "---------------------------------------------------------"
log_info "üìù **RESUMO DA CONFIGURA√á√ÉO DO FIREWALL**"
log_info "---------------------------------------------------------"
log_info "‚úîÔ∏è Firewall Proxmox VE ativo com regras para:"
log_info "    - Acesso ao WebUI (porta 8006) das redes internas (via IPSet 'local_networks')"
log_info "    - Acesso SSH (porta 22) das redes internas (via IPSet 'local_networks')"
log_info "    - Comunica√ß√£o interna do cluster (Corosync: 5404-5405, pve-cluster: 2224) na rede '$CLUSTER_NETWORK'"
log_info "    - Ping (ICMP) entre os n√≥s do cluster"
log_info "    - Acesso de sa√≠da para NTP e Internet (HTTPS)"
log_info "    - Redes Locais ('local_networks' IPSet) configuradas para: $(IFS=', '; echo "${LOCAL_NETWORKS[*]}")"
log_info "---------------------------------------------------------"
log_info "üîç **PR√ìXIMOS PASSOS IMPORTANTES**:"
log_info "1.  **VERIFIQUE A CONECTIVIDADE**: Teste o acesso ao WebUI e SSH das suas redes locais."
log_info "2.  **TESTE A COMUNICA√á√ÉO DO CLUSTER**: Certifique-se de que os n√≥s do cluster podem se comunicar (Corosync, pve-cluster)."
log_info "3.  **AJUSTES**: Se necess√°rio, ajuste as regras de firewall manualmente via WebUI ou editando os arquivos `/etc/pve/firewall/cluster.fw` e `/etc/pve/nodes/$NODE_NAME/firewall/host.fw`."
log_info "---------------------------------------------------------"
